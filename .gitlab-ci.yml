stages:
  - build
  - test
  # - quality
  - publish
  - deploy

backend_build:
  stage: build
  image: maven:latest
  script:
    - cd backend
    - ./mvnw clean package

frontend_build:
  stage: build
  image: node:latest
  script:
    - cd frontend
    - npm install
    - npm run build

test:
  stage: test
  image: maven:latest
  script:
    - cd backend
    - ./mvnw test

# quality:
#   stage: quality
#   image: openjdk:11
#   script:
#     - echo "Compiling the project"
#     - mkdir smells/
#     - java -jar $CI_PROJECT_DIR/.gitlab/DesigniteJava.jar -i $CI_PROJECT_DIR -o $CI_PROJECT_DIR/smells/ -d
#   artifacts:
#     paths:
#       - smells/
#       - $CI_PROJECT_DIR

publish:
  image: docker:latest
  stage: publish
  tags:
    - rentalsphere
  variables:
    DOCKER_TLS_CERTDIR: ""
    DOCKER_HOST: "tcp://docker:2375"
  services:
    - docker:dind
  script:
    - pwd
    - echo $SERVER_IP
    - docker --version
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PWD docker.io

    - cd backend/
    - docker build -t docker.io/$DOCKER_HUB_USERNAME/rentalsphere-backend:$CI_COMMIT_SHORT_SHA .
    - docker push docker.io/$DOCKER_HUB_USERNAME/rentalsphere-backend:$CI_COMMIT_SHORT_SHA

    - cd ..

    - cd frontend/
    - docker build -t docker.io/$DOCKER_HUB_USERNAME/rentalsphere-frontend:$CI_COMMIT_SHORT_SHA .
    - docker push docker.io/$DOCKER_HUB_USERNAME/rentalsphere-frontend:$CI_COMMIT_SHORT_SHA

  only:
    - cicd-yash
# # deploy:
# #   image: docker:latest
# #   stage: deploy
# #   tags:
# #     - elderlink
# #   variables:
# #     DOCKER_TLS_CERTDIR: ""
# #     DOCKER_HOST: "tcp://docker:2375"
# #   services:
# #     - docker:dind
# #   script:
# #     - pwd
# #     - echo $SERVER_IP
# #     - docker --version
# #     - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PWD docker.io
# #     - docker-compose -f docker-compose.yml up -d
# #     - echo "Current Build Files!"
# #     - cd ./build/ || true
# #     - docker ps
# #     - docker cp group12-frontend-1:./build/* /var/www/build/sudo service nginx start
# #     - echo "Altered Build Files!"

# #   environment:
# #   # name: production
# #     name: test
# #     url: http://172.17.0.236/5173

# #   only:
# #     - cicd-abhishek

# deploy-backend:
#   image: alpine:latest
#   stage: deploy
#   tags:
#     - rentalsphere
#   script:
#     - cd backend/
#     - echo "Deploying Backend..."
#     - chmod og-rwx $ID_RSA
#     - apk update && apk add openssh-client sshpass
#     - sshpass -p "dalw24" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PWD docker.io"
#     - sshpass -p "dalw24" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker pull docker.io/$DOCKER_HUB_USERNAME/elderlink-backend:$CI_COMMIT_SHORT_SHA"
#     - sshpass -p "dalw24" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker container rm -f elderlink-backend || true"
#     - sshpass -p "dalw24" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker run -d -p 8080:8080 --name elderlink-backend docker.io/$DOCKER_HUB_USERNAME/elderlink-backend:$CI_COMMIT_SHORT_SHA"
#     - sshpass -p "dalw24" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker images -a"
#     - sshpass -p "dalw24" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker container ls -a"

#   environment:
#   # name: production
#     name: test
#     url: http://172.17.0.236:8080

# deploy-frontend:
#   image: alpine:latest
#   stage: deploy
#   tags:
#     - elderlink
#   script:
#     - cd frontend/
#     - echo "Deploying Frontend..."
#     - chmod og-rwx $ID_RSA
#     - apk update && apk add openssh-client sshpass
#     - sshpass -p "dalw24" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PWD docker.io"
#     - sshpass -p "dalw24" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker pull docker.io/$DOCKER_HUB_USERNAME/elderlink-frontend:$CI_COMMIT_SHORT_SHA"
#     - sshpass -p "dalw24" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker container rm -f elderlink-frontend || true"
#     - sshpass -p "dalw24" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker run -d -p 5173:5173 --name elderlink-frontend docker.io/$DOCKER_HUB_USERNAME/elderlink-frontend:$CI_COMMIT_SHORT_SHA"
#     - sshpass -p "dalw24" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker images -a"
#     - sshpass -p "dalw24" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker container ls -a"
#     - cd ..
#     - sshpass -p "dalw24" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker-compose up"
#     - sshpass -p "dalw24" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker images -a"
#     - sshpass -p "dalw24" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker container ls -a"

#   environment:
#   # name: production
#     name: test
#     url: http://172.17.0.236:5173

#   only:
#     - cicd-yash
